{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SORT_FIELD_ALPH","SORT_FIELD_LENTGTH","App","useState","sortField","setSortField","reverseField","setReverseField","sortedGods","goods","reverse","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","cn","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAKIC,EAAkB,OAClBC,EAAqB,SA+BpB,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAoB,IAAtD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAhCR,SACEC,EACAL,EACAM,GAEA,IAAIC,EAAa,YAAOF,GAExB,GAAIL,EACF,OAAQA,GACN,KAAKJ,EACHW,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAEF,KAAKb,EACHU,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAC1D,MAEF,QACEL,EAAa,YAAOA,GAI1B,OAAID,EACKC,EAAcD,UAGhBC,EAMYM,CACjBlB,EACAK,EACAE,GAUF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAAS,kBAAMhB,EAAaL,IAP9B,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAcH,IAE9BoB,QAAS,kBAAMhB,EAAaJ,IAP9B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,YAAad,IAEjBe,QAAS,WACPd,GAAgB,SAAAe,GAAO,OAAKA,MARhC,wBAlCAhB,GAA8B,KAAdF,IAkDZ,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,GAAgB,IALpB,sBAaN,6BACGC,EAAWe,KAAI,SAAAC,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SACGA,aC5HbC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.94eebec4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype SortField = 'alph' | 'length' | '';\n\nconst SORT_FIELD_ALPH = 'alph';\nconst SORT_FIELD_LENTGTH = 'length';\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: SortField,\n  reverse: boolean,\n) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    switch (sortField) {\n      case SORT_FIELD_ALPH:\n        preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n\n      case SORT_FIELD_LENTGTH:\n        preparedGoods.sort((good1, good2) => good1.length - good2.length);\n        break;\n\n      default:\n        preparedGoods = [...preparedGoods];\n    }\n  }\n\n  if (reverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortField>('');\n  const [reverseField, setReverseField] = useState(false);\n  const sortedGods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    reverseField,\n  );\n  const resetReverse = () => {\n    if (reverseField || sortField !== '') {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPH },\n          )}\n          onClick={() => setSortField(SORT_FIELD_ALPH)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_LENTGTH },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENTGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': !reverseField },\n          )}\n          onClick={() => {\n            setReverseField(current => !current);\n          }}\n        >\n          Reverse\n        </button>\n\n        {resetReverse()\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortField('');\n                setReverseField(false);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {sortedGods.map(good => (\n          <li data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}